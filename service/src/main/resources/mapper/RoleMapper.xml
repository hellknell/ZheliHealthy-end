<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Yu.his.service.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.Yu.his.service.domain.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="systemic" jdbcType="BIT" property="systemic" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.Yu.his.service.domain.RoleWithBLOBs">
    <result column="permissions" jdbcType="LONGVARCHAR" property="permissions" />
    <result column="default_permissions" jdbcType="LONGVARCHAR" property="defaultPermissions" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_name, desc, systemic
  </sql>
  <sql id="Blob_Column_List">
    permissions, default_permissions
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.Yu.his.service.domain.RoleWithBLOBs">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_role (id, role_name, desc, 
      systemic, permissions, default_permissions
      )
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, 
      #{systemic,jdbcType=BIT}, #{permissions,jdbcType=LONGVARCHAR}, #{defaultPermissions,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.Yu.his.service.domain.RoleWithBLOBs">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="roleName != null">
        role_name,
      </if>
      <if test="desc != null">
        desc,
      </if>
      <if test="systemic != null">
        systemic,
      </if>
      <if test="permissions != null">
        permissions,
      </if>
      <if test="defaultPermissions != null">
        default_permissions,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="systemic != null">
        #{systemic,jdbcType=BIT},
      </if>
      <if test="permissions != null">
        #{permissions,jdbcType=LONGVARCHAR},
      </if>
      <if test="defaultPermissions != null">
        #{defaultPermissions,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.Yu.his.service.domain.RoleWithBLOBs">
    update tb_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="systemic != null">
        systemic = #{systemic,jdbcType=BIT},
      </if>
      <if test="permissions != null">
        permissions = #{permissions,jdbcType=LONGVARCHAR},
      </if>
      <if test="defaultPermissions != null">
        default_permissions = #{defaultPermissions,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.Yu.his.service.domain.RoleWithBLOBs">
    update tb_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      desc = #{desc,jdbcType=VARCHAR},
      systemic = #{systemic,jdbcType=BIT},
      permissions = #{permissions,jdbcType=LONGVARCHAR},
      default_permissions = #{defaultPermissions,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Yu.his.service.domain.Role">
    update tb_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      desc = #{desc,jdbcType=VARCHAR},
      systemic = #{systemic,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="list" parameterType="com.Yu.his.generator.help.MyBatisWrapper" resultMap="BaseResultMap">
        <include refid="listSql"/>
    </select>
    <sql id="listSql">
        select
        <if test="selectBuilder == null">
            *
        </if>
        <if test="selectBuilder != null">
            <trim prefixOverrides="," suffixOverrides=",">
                ${selectBuilder}
            </trim>
        </if>
        from tb_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="groupBySql != null">
            group by ${groupBySql}
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="rows != null">
            <if test="offset != null">
                limit ${offset}, ${rows}
            </if>
            <if test="offset == null">
                limit ${rows}
            </if>
        </if>
    </sql>
  <sql id="Example_Where_Clause">
   <where>
            <trim prefixOverrides="and | or">
                <foreach collection="oredCriteria" item="criteria">
                    <if test="criteria.valid">
                        <if test="criteria.andOrOr">
                            and
                        </if>
                        <if test="!criteria.andOrOr">
                            or
                        </if>
                        <trim prefix="(" prefixOverrides="and | or" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        ${criterion.condition} #{criterion.value, jdbcType=${criterion.jdbcType}}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        ${criterion.condition} #{criterion.value, jdbcType=${criterion.jdbcType}} and #{criterion.secondValue, jdbcType=${criterion.jdbcType}}
                                    </when>
                                    <when test="criterion.listValue">
                                        ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem, jdbcType=${criterion.jdbcType}}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </trim>
        </where></sql>
  <delete id="deleteField" parameterType="com.Yu.his.generator.help.MyBatisWrapper">
    delete from tb_role 
      <include refid="Update_By_Example_Where_Clause" />
  </delete>
    <select id="topOne" parameterType="com.Yu.his.generator.help.MyBatisWrapper" resultMap="BaseResultMap">
    select
    <if test="selectBuilder != null">
      <trim prefixOverrides="," suffixOverrides=",">
         ${selectBuilder} 
      </trim>
    </if>
    from tb_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>

  <select id="count" parameterType="com.Yu.his.generator.help.MyBatisWrapper" resultType="java.lang.Integer">
        <include refid="countSql"/>
    </select>
    <sql id="countSql">
        select count(*) total_count from tb_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </sql>
  <update id="updateField" parameterType="com.Yu.his.generator.help.MyBatisWrapper">
    update tb_role 
    set 
    <trim prefixOverrides="," suffixOverrides=",">
         ${example.updateSql} 
      </trim>
     <if test="example.updateSql != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="Update_By_Example_Where_Clause">
   <where>
            <trim prefixOverrides="and | or">
                <foreach collection="example.oredCriteria" item="criteria" separator="or">
                    <if test="criteria.andOrOr">
                        and
                    </if>
                    <if test="!criteria.andOrOr">
                        or
                    </if>
                    <if test="criteria.valid">
                        <trim prefix="(" prefixOverrides="and" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        ${criterion.condition} #{criterion.value, jdbcType=${criterion.jdbcType}}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        ${criterion.condition} #{criterion.value, jdbcType=${criterion.jdbcType}} and #{criterion.secondValue, jdbcType=${criterion.jdbcType}}
                                    </when>
                                    <when test="criterion.listValue">
                                        ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem, jdbcType=${criterion.jdbcType}}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </trim>
        </where></sql>
   <update id="updateFieldBatch" parameterType="java.util.List">
           <foreach collection="list" index="index" item="example" separator=";">
               update tb_role 
                   set 
               <trim prefixOverrides="," suffixOverrides=",">
                   ${example.updateSql} 
               </trim>
               <if test="example != null">
                   <include refid="Update_By_Example_Where_Clause" />
               </if>           </foreach>
  </update>
    <select id="get" parameterType="com.Yu.his.generator.help.MyBatisWrapper" resultMap="BaseResultMap">
        select
    <if test="selectBuilder != null">
      <trim prefixOverrides="," suffixOverrides=",">
         ${selectBuilder} 
      </trim>
 </if>
    from tb_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <insert id="insertBatch" keyColumn="id" keyProperty="id" parameterType="java.util.Collection" useGeneratedKeys="true">
    insert into tb_role (role_name, desc, systemic, permissions, default_permissions) values
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        #{item.roleName, jdbcType=VARCHAR},
        #{item.desc, jdbcType=VARCHAR},
        #{item.systemic, jdbcType=BIT},
        #{item.permissions, jdbcType=LONGVARCHAR},
        #{item.defaultPermissions, jdbcType=LONGVARCHAR},
      </trim>
    </foreach>
  </insert>
  <update id="updateBatchSelective" parameterType="java.util.List">
    update tb_role
    <set>
      <trim prefix="id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.id != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.id,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="role_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.roleName != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.roleName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="desc = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.desc != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.desc,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="systemic = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.systemic != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.systemic,jdbcType=BIT}
          </if>
        </foreach>
      </trim>
      <trim prefix="permissions = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.permissions != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.permissions,jdbcType=LONGVARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="default_permissions = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.defaultPermissions != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.defaultPermissions,jdbcType=LONGVARCHAR}
          </if>
        </foreach>
      </trim>
    </set>
  where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
</update>

</mapper>